services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: cloudsec
      POSTGRES_USER: cloudsec
      POSTGRES_PASSWORD: cloudsec
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "5432:5432"

  redis:
    image: redis:7.2-alpine
    container_name: redis
    command: redis-server --maxmemory 25mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    ports:
      - "8001:8000"
    restart: unless-stopped

  celery:
    build:
      context: ./backend
    container_name: celery
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  postgres_data: