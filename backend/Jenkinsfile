pipeline {
    agent any
    environment {
        DJANGO_SETTINGS_MODULE = 'core.settings'
        PYTHONUNBUFFERED = '1'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Install dependencies') {
            steps {
                sh '''
                    pip install --upgrade pip
                    pip install -r requirements.txt
                    pip install flake8 bandit pycodestyle safety black isort pre-commit
                '''
            }
        }
        stage('Lint code') {
            steps {
                sh 'flake8 backend'
            }
        }
        stage('PEP8 Check') {
            steps {
                sh 'pycodestyle backend'
            }
        }
        stage('Security checks') {
            steps {
                sh 'bandit -r backend'
            }
        }
        stage('Dependency security') {
            steps {
                sh 'safety check -r requirements.txt'
            }
        }
        stage('Black formatting') {
            steps {
                sh 'black --check backend'
            }
        }
        stage('Isort import order') {
            steps {
                sh 'isort --check-only backend'
            }
        }
        stage('Pre-commit checks') {
            steps {
                sh 'pre-commit run --all-files'
            }
        }
        stage('Run migrations') {
            steps {
                sh 'python manage.py migrate'
            }
        }
        stage('Collect static files') {
            steps {
                sh 'python manage.py collectstatic --noinput'
            }
        }
        stage('Run tests') {
            steps {
                echo 'Aggiungi qui i tuoi test!'
                // sh 'pytest backend'
            }
        }
    }
    post {
        always {
            echo 'Pipeline terminata'
        }
        success {
            echo 'Build andata a buon fine!'
        }
        failure {
            echo 'Errore nella build!'
        }
    }
}
